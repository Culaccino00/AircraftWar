@startuml
'https://plantuml.com/class-diagram

interface EnemyFactory {
    + {abstract}createEnemy(int hp, int speedY): AbstractEnemyAircraft
}
class MobEnemyFactory {
    + createEnemy(int hp, int speedY):AbstractEnemyAircraft
}

class EliteEnemyFactory {
    + createEnemy(int hp, int speedY):AbstractEnemyAircraft
}

class ElitePlusEnemyFactory{
    + createEnemy(int hp, int speedY):AbstractEnemyAircraft
}

class BossEnemyFactory{
    + createEnemy(int hp, int speedY):AbstractEnemyAircraft
}
EnemyFactory <|.. EliteEnemyFactory
EnemyFactory <|.. MobEnemyFactory
EnemyFactory <|.. ElitePlusEnemyFactory
EnemyFactory <|.. BossEnemyFactory

abstract class AbstractEnemyAircraft{
    # direction:int
    # propNum:int

    + AbstractEnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + getSpeedX():int
    + shoot():List<BaseBullet>
    + createProps():List<BaseProp>
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + update():void
}
AbstractEnemyAircraft <|-- MobEnemy

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + update():void
}
AbstractEnemyAircraft <|-- EliteEnemy

class ElitePlusEnemy{
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + update():void
}
AbstractEnemyAircraft <|-- ElitePlusEnemy

class BossEnemy{
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}
AbstractEnemyAircraft <|-- BossEnemy

EliteEnemyFactory ..> EliteEnemy :create
MobEnemyFactory ..> MobEnemy :create
ElitePlusEnemyFactory ..> ElitePlusEnemy :create
BossEnemyFactory ..> BossEnemy :create

@enduml