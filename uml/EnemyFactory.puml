@startuml
'https://plantuml.com/class-diagram


class Game{
- addEnemy():void
}
abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + getMaxHp():int
    + {abstract} shoot():List<BaseBullet>
    + {abstract} createProps():List<BaseProp>
 }
interface EnemyFactory {
    + {abstract}createEnemy():AbstractAircraft
}
Game ..> AbstractAircraft
Game ..> EnemyFactory

class EliteEnemyFactory {
    +createEnemy():AbstractAircraft
}
class MobEnemyFactory {
    +createEnemy():AbstractAircraft
}
EnemyFactory <|.. EliteEnemyFactory
EnemyFactory <|.. MobEnemyFactory

class EliteEnemy {
    - shootNum:int
    - power:int
    - direction:int
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + createProps():List<BaseProp>
}
class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + createProps():List<BaseProp>
}
EliteEnemyFactory ..> EliteEnemy :create
MobEnemyFactory ..> MobEnemy :create
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- MobEnemy
@enduml